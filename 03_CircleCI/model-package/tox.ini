# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python. We will be using it extensively in this course.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing


[tox]
envlist = test_package # test_package is the name of the env in .tox folder
skipsdist = True

[testenv]
install_command = pip install {opts} {packages} # installs the dependencies

passenv =
	GEMFURY_PUSH_URL

[testenv:test_package]
deps =
	-rrequirements/test_requirements.txt # dependencies listed in the test_requirement.txt file saved in the folder requirements

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands=
	python logistic_regression_model/main.py
	pytest \                                
	-s \
	-vv \
	{posargs:tests/}

# The commands above run the main.py file followed by the pytests. Note that I have put the comment below the command as it causes errors if the comment
# is placed next to each command!!!

[testenv:publish_model]
envdir = {toxworkdir}/test_package
deps =
	{[testenv:test_package]deps}

setenv =
	{[testenv:test_package]setenv}

commands=
	python logistic_regression_model/main.py
	./publish_model.sh .

# Everything below this line is copied from Udemy course - does lint checks. 
# I also copied the mypy.ini file from the course as lots of errors show up if not used.

[testenv:typechecks]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands = {posargs:mypy logistic_regression_model}


[testenv:stylechecks]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands = {posargs:flake8 logistic_regression_model tests}


[testenv:lint]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands =
	isort logistic_regression_model tests
	black logistic_regression_model tests
	mypy logistic_regression_model
	flake8 logistic_regression_model

[flake8]
exclude = .git,env
max-line-length = 160 

# I have purposely set this really high as I did not bother reformatting to PEP 8 etc.